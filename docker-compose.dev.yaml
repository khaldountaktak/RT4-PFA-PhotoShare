version: "3.8"

services:
  database:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - ${DB_PORT}:5432

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 9999:8080

  minio:
    image: quay.io/minio/minio:RELEASE.2024-01-18T22-51-28Z
    command: server --console-address ":9001" /home/shared
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 30s
      timeout: 20s

  minio-bootstrap:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_DEFAULT_BUCKETS: ${MINIO_DEFAULT_BUCKETS}
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set remote http://minio:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb remote/$${MINIO_DEFAULT_BUCKETS};
      /usr/bin/mc anonymous set public remote/$${MINIO_DEFAULT_BUCKETS};
      exit 0;
      "

  user:
    build:
      context: .
      dockerfile: ./Dockerfile.nestjs
      args:
        - APP=user
    # entrypoint: sh
    # tty: true
    restart: unless-stopped
    ports:
      - ${USER_PORT}:${USER_PORT}
    depends_on:
      - database
      - consul
      - rabbitmq
    env_file:
      - ./.env.dev

  photo:
    build:
      context: .
      dockerfile: ./Dockerfile.nestjs
      args:
        - APP=photo
    restart: always
    ports:
      - ${PHOTO_PORT}:${PHOTO_PORT}
    depends_on:
      - database
      - consul
    env_file:
      - ./.env.dev

  payment:
    build:
      context: .
      dockerfile: ./Dockerfile.nestjs
      args:
        - APP=payment
    restart: always
    ports:
      - ${PAYMENT_PORT}:${PAYMENT_PORT}
    depends_on:
      - database
      - photo
      - user
      - consul
      - rabbitmq
    env_file:
      - ./.env.dev

  auth:
    build:
      context: .
      dockerfile: ./Dockerfile.nestjs
      args:
        - APP=auth
    restart: always
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}
    env_file:
      - .env.dev
    depends_on:
      - consul
      - user

  nginx:
    build: ./nginx
    ports:
      - "8080:8080"
      - "443:443"
    depends_on:
      - auth
      - user
      - payment
      - rabbitmq
      - photo
      - minio
      - database
      - consul
    extra_hosts:
      - "host.docker.internal:host-gateway"

  consul:
    image: hashicorp/consul
    command: "agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0"
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      -RABBITMQ_CLUSTER_PEER_DISCOVERY_BACKEND: "consul"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbit/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbit/enabled_plugins:/etc/rabbitmq/enabled_plugins
    depends_on:
      - consul

volumes:
  rabbitmq_data:
