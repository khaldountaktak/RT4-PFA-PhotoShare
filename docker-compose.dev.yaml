version: "3.8"

services:
  data-base:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - ${DB_PORT}:5432
    networks:
      - app_network

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 9999:8080
    networks:
      - app_network

  # user:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #     args:
  #       - PROJECT=user
  #       - PORT=3001
  #   restart: unless-stopped
  #   networks:
  #     - app_network
  #   ports:
  #     - 3001:3001
  #   depends_on:
  #     - data-base
  #   env_file:
  #     - .dev.env
  
  # auth:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #     args:
  #       - PROJECT=auth
  #       - PORT=3000
  #   restart: unless-stopped
  #   entrypoint: sh
  #   tty: true
  #   networks:
  #     - app_network
  #   ports:
  #     - 3000:3000
  #   env_file:
  #     - .dev.env
  #   depends_on:
  #     - consul

  nginx:
    build: ./nginx
    ports:
      - "8080:8080"
    networks:
      - app_network
    extra_hosts:
    - "auth:host-gateway"
    # depends_on:
    #   - auth
    # links:
    #   - auth


 

  consul:
    image: hashicorp/consul
    command: "agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0"
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    networks:
      - app_network
    extra_hosts:
    - "auth:host-gateway"


networks:
  app_network: