upstream backend_auth {
{{- range service "auth" }}
  server {{ .Address }}:{{ .Port }};
{{- end }}
}

upstream backend_user {
{{- range service "user" }}
  server {{ .Address }}:{{ .Port }};
{{- end }}
}

upstream backend_payment {
{{- range service "payment" }}
  server {{ .Address }}:{{ .Port }};
{{- end }}
}

upstream backend_photo {
{{- range service "photo" }}
  server {{ .Address }}:{{ .Port }};
{{- end }}
}

server {
   listen 443 ssl;
   server_name host.docker.internal;

   ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
   ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

   # from https://cipherli.st/
   # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html

   ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
   ssl_prefer_server_ciphers on;
   ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
   ssl_ecdh_curve secp384r1;
   ssl_session_cache shared:SSL:10m;
   ssl_session_tickets off;
   #ssl_stapling on;
   #ssl_stapling_verify on;
   resolver 8.8.8.8 8.8.4.4 valid=300s;
   resolver_timeout 5s;
   # Disable preloading HSTS for now.  You can use the commented out header line that includes
   # the "preload" directive if you understand the implications.
   #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
   #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
   add_header X-Frame-Options DENY;
   add_header X-Content-Type-Options nosniff;

   ssl_dhparam /etc/ssl/certs/dhparam.pem;



   location /auth {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_buffering off;
      proxy_pass http://backend_auth;
   }

   location /photo {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_buffering off;
      proxy_pass http://backend_photo;
   }

   location /user {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_buffering off;
      proxy_pass http://backend_user;
   }

   location /payment {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_buffering off;
      proxy_pass http://backend_payment;
   }
}